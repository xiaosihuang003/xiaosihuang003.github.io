---
/* @ts-nocheck */
import Layout from "../../layouts/Layout.astro";
import { dict, normalizeLang, languages } from "../../i18n";

// 动态路由
export const prerender = true;
export function getStaticPaths() {
  return (languages as readonly string[]).map((lang) => ({ params: { lang } }));
}

const lang = normalizeLang(Astro.params.lang as string);
const t = dict[lang];

/* ─────────────────────────────────────────
   ① 照片墙数据：静态导入 JSON
   ───────────────────────────────────────── */
import CAPS_EN from "../../data/albums.en.json";
import CAPS_ZH from "../../data/albums.zh.json";
import CAPS_YUE from "../../data/albums.yue.json";
import CAPS_FI from "../../data/albums.fi.json";
import CAPS_NO from "../../data/albums.no.json";
import CAPS_SV from "../../data/albums.sv.json";

/** 四季键 */
type SeasonKey = "Spring" | "Summer" | "Autumn" | "Winter";

/** 每年的文案结构：四季 + 可选的 Highlights（按 001/002… 对应） */
type YearCaps = Partial<Record<SeasonKey, string>> & { Highlights?: string[] };
type Caps = Record<string, YearCaps>;

// 当前语言的 caption 映射（没有则回退到英文）
const BY_LANG: Record<string, Caps> = {
  en: CAPS_EN as Caps,
  zh: CAPS_ZH as Caps,
  yue: CAPS_YUE as Caps,
  fi: CAPS_FI as Caps,
  no: CAPS_NO as Caps,
  sv: CAPS_SV as Caps,
};
const CAPS: Caps = BY_LANG[lang] ?? (CAPS_EN as Caps);

// 年份：把“英文 + 当前语言”的 key 合并，再倒序
const years = Array.from(new Set([
  ...Object.keys(CAPS_EN as Caps),
  ...Object.keys(CAPS),
]))
  .map((y) => Number(y))
  .sort((a, b) => b - a);

// 先取当前语言 caption，缺失则回退英文
const captionOf = (year: number, s: SeasonKey) =>
  CAPS[String(year)]?.[s] ??
  (CAPS_EN as Caps)[String(year)]?.[s] ??
  "";

// 取某年的 Highlights（若无则空数组）
const highlightsOf = (year: number): string[] =>
  (CAPS[String(year)]?.Highlights ??
   (CAPS_EN as Caps)[String(year)]?.Highlights ??
   []) as string[];

// 各语言的季节名
const seasonLabelMap: Record<string, Record<SeasonKey, string>> = {
  en: { Spring: "Spring", Summer: "Summer", Autumn: "Autumn", Winter: "Winter" },
  zh: { Spring: "春", Summer: "夏", Autumn: "秋", Winter: "冬" },
  yue:{ Spring: "春", Summer: "夏", Autumn: "秋", Winter: "冬" },
  fi: { Spring: "Kevät", Summer: "Kesä", Autumn: "Syksy", Winter: "Talvi" },
  no: { Spring: "Vår", Summer: "Sommer", Autumn: "Høst", Winter: "Vinter" },
  sv: { Spring: "Vår", Summer: "Sommar", Autumn: "Höst", Winter: "Vinter" },
};
const S = seasonLabelMap[lang] ?? seasonLabelMap.en;
const ORDER: SeasonKey[] = ["Spring", "Summer", "Autumn", "Winter"];

// “年度高光” i18n（页面内自带回退，不改你 i18n 文件）
const HIGHLIGHTS_LABEL: Record<string, string> = {
  en: "Highlights",
  zh: "年度高光",
  yue: "年度高光",
  fi: "Kohokohdat",
  no: "Høydepunkter",
  sv: "Höjdpunkter",
};
const HLabel = HIGHLIGHTS_LABEL[lang] ?? HIGHLIGHTS_LABEL.en;

// 序号补零（001、002…），匹配 /Highlights/001.jpg 命名
const pad3 = (n: number) => String(n).padStart(3, "0");

/* ─────────────────────────────────────────
   ② 其余数据（头像/链接/教育/语言/国家/技能）
   ───────────────────────────────────────── */
const avatar = "/images/about/avatar.jpg";

const links: Array<{ label: string; href: string; sub?: string; ext?: boolean }> = [
  { label: "GitHub",         href: "https://github.com/xiaosihuang003", ext: true },
  { label: "LinkedIn",       href: "https://www.linkedin.com/in/xiaosi-huang-387559251/", ext: true },
  { label: "Tableau Public", href: "https://public.tableau.com/app/profile/xiaosi.huang/vizzes", ext: true },
  { label: "Resume & CV",    href: "/resume.pdf", ext: true },
  { label: "Email :",        href: "mailto:huang.xiaosi@outlook.com", sub: "huang.xiaosi@outlook.com" },
];

const thesisUrl = "https://www.theseus.fi/handle/10024/885903";
type Edu = { title: string; school: string; period: string; gpa?: string; thesis?: { label: string; href: string } };
const education: Edu[] = [
  { title: "M.Sc. in Data Science (ongoing)", school: "Tampere University", period: "Aug 2025 – present" },
  { title: "B.Eng. in Software Engineering",  school: "Tampere University of Applied Sciences", period: "Aug 2021 – May 2025", gpa: "GPA: 4.63 / 5", thesis: { label: "Bachelor’s Thesis", href: thesisUrl } },
];

const profileByLang: Record<string, { speak: string[]; studied: string[]; learning: string[] }> = {
  en: { speak: ["English", "Cantonese", "Mandarin"], studied: ["Japanese", "Korean", "Finnish"], learning: ["Norwegian", "Swedish"] },
  zh: { speak: ["英语", "粤语", "普通话"],             studied: ["日语", "韩语", "芬兰语"],     learning: ["挪威语", "瑞典语"] },
  yue:{ speak: ["英語", "廣東話", "普通話"],           studied: ["日文", "韓文", "芬蘭文"],     learning: ["挪威文", "瑞典文"] },
  fi: { speak: ["englanti", "kantoninkiina", "mandariinikiina"], studied: ["japani", "korea", "suomi"], learning: ["norja", "ruotsi"] },
  no: { speak: ["engelsk", "kantonesisk", "mandarin"],           studied: ["japansk", "koreansk", "finsk"], learning: ["norsk", "svensk"] },
  sv: { speak: ["engelska", "kantonesiska", "mandarin"],         studied: ["japanska", "koreanska", "finska"], learning: ["norska", "svenska"] },
};
const langData = profileByLang[lang] ?? profileByLang.en;

const countries = [
  "🇫🇷France","🇯🇵Japan","🇷🇺Russia","🇹🇷Turkey","🇫🇮Finland","🇱🇻Latvia","🇳🇴Norway","🇭🇺Hungary",
  "🇦🇹Austria","🇱🇹Lithuania","🇮🇹Italy","🇨🇿Czechia","🇸🇰Slovakia","🇧🇪Belgium","🇪🇪Estonia","🇸🇪Sweden",
  "🇪🇸Spain","🇵🇹Portugal","🇨🇭Switzerland","🇩🇪Germany","🇩🇰Denmark","🇷🇴Romania","🇬🇷Greece","🇭🇷Croatia",
  "🇸🇮Slovenia",
];

const skills = [
  "Tableau","Data Visualization","Dashboard Design",
  "SQL","Python","Pandas","Excel","Statistics",
  "A/B Testing","Storytelling","ETL","Data Cleaning"
];

// goodAt 标题的 i18n 回退
const goodAtTitle: string = (t as any)?.about?.goodAtTitle ?? "What I am good at?";
---

<Layout lang={lang} title={`Xiaosi Huang · ${t.about.title}`}>
  <section id="about" class="mx-auto max-w-5xl px-4">
    <h1 class="text-4xl font-extrabold mb-1">{t.about.title}</h1>
    {t.about.subtitle && <p class="text-zinc-600 dark:text-zinc-300 mb-5">{t.about.subtitle}</p>}

    <!-- 顶部：头像 / Links / 教育 / 技能 -->
    <section class="card card--tight">
      <div class="grid grid-cols-1 md:grid-cols-3 gap-4 items-stretch">
        <figure class="rounded-2xl border border-zinc-200 dark:border-zinc-800 bg-white dark:bg-zinc-900/70 p-4 overflow-hidden self-start md:self-stretch md:row-span-2 max-w-[240px] w-full">
          <div class="aspect-[4/5] w-full overflow-hidden rounded-xl">
            <img src={avatar} alt="Portrait" class="w-full h-full object-cover" style="object-position:center 22%;" loading="eager" onerror="this.src='/placeholder.jpg'" />
          </div>
        </figure>

        <div class="self-start">
          <h2 class="col-title">{t.about.links}</h2>
          <ul class="space-y-2">
            {links.map((l) => (
              <li class="pl-4 relative leading-tight">
                <span class="dot" aria-hidden="true"></span>
                <div class="link-row">
                  <a href={l.href} target={l.ext ? "_blank" : undefined} rel={l.ext ? "noopener noreferrer" : undefined} class="link font-medium text-[15px]">
                    {l.label}{l.ext ? " ↗" : ""}
                  </a>
                  {l.sub && <span class="sub sub-lg sub-inline text-zinc-600">{l.sub}</span>}
                </div>
              </li>
            ))}
          </ul>
        </div>

        <div class="self-start">
          <h2 class="col-title">{t.about.education}</h2>
          <ul class="space-y-2">
            {education.map((e) => (
              <li class="pl-4 relative leading-tight">
                <span class="dot" aria-hidden="true"></span>
                <div class="font-semibold text-[15px]">{e.title}</div>
                <div class="sub sub-lg text-zinc-600">{e.school}</div>
                <div class="sub sub-lg text-zinc-500">{e.period}</div>
                {e.gpa && <div class="sub sub-lg text-zinc-600">{e.gpa}</div>}
                {e.thesis && (
                  <div class="mt-0.5">
                    <a href={e.thesis.href} target="_blank" rel="noopener noreferrer" class="text-[16px] md:text-[17px] font-semibold text-red-600 hover:text-red-700">
                      {e.thesis.label} ↗
                    </a>
                  </div>
                )}
              </li>
            ))}
          </ul>
        </div>

        <div class="md:col-span-2 md:col-start-2">
          <h2 class="col-title">{goodAtTitle}</h2>
          <div class="countries-chips">
            {skills.map((s) => <span class="pill">{s}</span>)}
          </div>
        </div>
      </div>
    </section>

    <!-- 语言 & 国家 -->
    <section class="card mt-5">
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6 items-start">
        <div class="md:col-span-1">
          <h2 class="sec-title">{t.about.languages}</h2>

          <div class="lang-row">
            <span class="lang-label">{t.about.speak}</span>
            <div class="lang-chips">{langData.speak.map((x) => <span class="pill">{x}</span>)}</div>
          </div>

          <div class="lang-row">
            <span class="lang-label">{t.about.studied}</span>
            <div class="lang-chips">{langData.studied.map((x) => <span class="pill">{x}</span>)}</div>
          </div>

          <div class="lang-row">
            <span class="lang-label">{t.about.learning}</span>
            <div class="lang-chips">{langData.learning.map((x) => <span class="pill">{x}</span>)}</div>
          </div>
        </div>

        <div class="md:col-span-2">
          <h2 class="sec-title flex items-baseline gap-2">
            {t.about.countriesVisited} <span class="count">({countries.length})</span>
          </h2>
          <div class="countries-chips">{countries.map((c) => <span class="pill">{c}</span>)}</div>
        </div>
      </div>
    </section>

    <!-- 四季照片墙：按年渲染。若有 Highlights 先展示；下面保留四季四张卡片 -->
    <section class="mt-4">
      <h2 class="text-xl font-semibold">{t.about.fourSeasonsTitle}</h2>
      <p class="text-zinc-600 dark:text-zinc-300 mb-3 text-[15px]">{t.about.fourSeasonsSubtitle}</p>

      {years.map((year) => {
        const H = highlightsOf(year);
        return (
          <div class="mb-6">
            <h3 class="text-lg font-semibold mb-2">
              {year} · {S.Spring} • {S.Summer} • {S.Autumn} • {S.Winter}
            </h3>

            {/* 年度高光（可选） */}
            {H.length > 0 && (
              <div class="mb-3">
                <div class="text-[15px] font-semibold mb-2">{HLabel}</div>
                <div class="masonry">
                  {H.map((cap, idx) => (
                    <figure class="masonry-item rounded-2xl border border-zinc-200 dark:border-zinc-800 bg-white/90 dark:bg-zinc-900/60 overflow-hidden">
                      <img
                        src={`/images/about/${year}/Highlights/${pad3(idx + 1)}.jpg`}
                        alt={`${year} Highlights ${idx + 1}`}
                        class="w-full h-auto object-contain"
                        loading="lazy"
                        onerror="this.src='/placeholder.jpg'"
                      />
                      {(cap ?? "").trim() && (
                        <figcaption class="p-2.5">
                          <div class="text-[13px] text-zinc-600 dark:text-zinc-300">{cap}</div>
                        </figcaption>
                      )}
                    </figure>
                  ))}
                </div>
              </div>
            )}

            {/* 四季四张卡片（固定比例，外观与原站一致） */}
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-3.5">
              {ORDER.map((s) => (
                <figure class="rounded-2xl border border-zinc-200 dark:border-zinc-800 bg-white/90 dark:bg-zinc-900/60 overflow-hidden">
                  <div class="w-full aspect-[4/3] md:aspect-[3/2] overflow-hidden">
                    <img
                      src={`/images/about/${year}/${s}.jpg`}
                      alt={`${year} ${s}`}
                      class="w-full h-full object-cover"
                      loading="lazy"
                      onerror="this.src='/placeholder.jpg'"
                    />
                  </div>
                  <figcaption class="p-2.5">
                    <div class="font-medium text-[15px]">{year} · {S[s]}</div>
                    {captionOf(year, s) && (
                      <div class="text-[13px] text-zinc-600 dark:text-zinc-300 mt-0.5">
                        {captionOf(year, s)}
                      </div>
                    )}
                  </figcaption>
                </figure>
              ))}
            </div>
          </div>
        );
      })}
    </section>
  </section>

  <style>
    #about .card{ border:1px solid var(--border); border-radius:16px; background:color-mix(in oklab, white 92%, transparent); padding:0.5rem 0.75rem; }
    @media (min-width:768px){ #about .card{ padding:0.75rem 1rem; } }
    #about .card--tight{ padding:0.6rem 0.9rem; }

    #about .dot{ position:absolute; left:0; top:.42rem; width:.42rem; height:.42rem; border-radius:9999px; background:#15803d; }
    #about .col-title{ font-size:1rem; font-weight:700; margin-bottom:.3rem; }
    #about .link{ text-decoration:none; border-bottom:1px solid transparent; }
    #about .link:hover{ text-decoration:underline; }

    #about .link-row{ display:flex; align-items:center; gap:.5rem; flex-wrap:wrap; }
    #about .sub{ font-size:13.5px; color:var(--muted); }
    #about .sub-lg{ font-size:14.5px; }
    #about .sub-inline{ display:inline; line-height:1.2; }

    #about .sec-title{ font-size:1rem; font-weight:700; margin-bottom:.35rem; }
    #about .count{ font-size:12.5px; color:var(--subtle); }

    #about .lang-row{ display:flex; align-items:center; gap:.45rem; flex-wrap:wrap; margin-bottom:.40rem; }
    #about .lang-label{ flex:0 0 auto; white-space:nowrap; font-size:14.5px; color:var(--muted); line-height:1.2; margin:0; }
    #about .lang-chips{ flex:1 1 0%; min-width:0; display:flex; flex-wrap:wrap; gap:.24rem .32rem; }

    #about .countries-chips{ display:flex; flex-wrap:wrap; gap:.24rem .32rem; }
    #about .pill{ display:inline-block; padding:.16rem .42rem; font-size:.76rem; line-height:1; border-radius:9999px; background:var(--tag-bg); color:var(--tag-text); border:1px solid var(--border); }

    /* ================ Masonry（仅作用于“年度高光”） ================ */
    #about .masonry{
      column-count: 1;
      column-gap: .875rem; /* ≈ gap-3.5 */
    }
    @media (min-width:640px){
      #about .masonry{ column-count: 2; }
    }
    @media (min-width:1024px){
      #about .masonry{ column-count: 4; }
    }
    #about .masonry-item{
      break-inside: avoid;
      margin-bottom: .875rem;
    }
  </style>
</Layout>
