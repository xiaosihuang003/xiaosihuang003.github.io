---
import Layout from "../../../layouts/Layout.astro";
import Breadcrumbs from "../../../components/Breadcrumbs.astro";
import { dict, normalizeLang, languages } from "../../../i18n";
import { getCollection, type CollectionEntry } from "astro:content";

export const prerender = true;

/* 动态路径：从 projects 集合推导 { lang, slug } */
export async function getStaticPaths() {
  const all = await getCollection("projects");
  return all.map((entry) => {
    const parts = entry.slug.split("/");
    const lang = parts.at(-1) || "en";
    const slug = parts.slice(0, -1).join("/") || parts[0];
    return { params: { lang, slug }, props: { entry, lang, slug } };
  });
}

type Params = { lang: string; slug: string };
const { lang: rawLang, slug } = Astro.params as Params;
const lang = normalizeLang(rawLang);
const t = dict[lang];
const base = lang === "en" ? "/en" : `/${lang}`;

const { entry } = Astro.props as { entry: CollectionEntry<"projects"> };
const { Content } = await entry.render();

/** 备用语言链接 */
const alternates = Object.fromEntries(
  languages.map((code) => [code, `${code === "en" ? "/en" : "/" + code}/projects/${slug}`]),
);

/** 标签 */
const tags = (entry.data.tags ?? []) as string[];

/** 当前是否 CJK 语言，用于标题排版差异化 */
const isCJK = ["zh", "ja", "ko"].includes(lang);
---

<Layout lang={lang} title={`${entry.data.title} · Xiaosi Huang`} alternates={alternates}>
  <!-- 保持和 Blog 页一致的宽度，居中 -->
  <section class="mx-auto max-w-5xl px-4 md:px-6 py-10">
    <div class="post-header">
      <div class="crumb-row">
        <Breadcrumbs
          items={[
            { href: base, label: t.nav.home },
            { href: `${base}/projects`, label: t.nav.projects },
          ]}
        />
        <p class="backlink">
          <a href={`${base}/projects`}>← {t.ui.backToProjects}</a>
        </p>
      </div>

      <div class="hero-head">
        <h1 class={`post-title ${isCJK ? "post-title-cjk" : "post-title-latin"}`}>
          {entry.data.title}
        </h1>

        {entry.data.subtitle && <p class="post-subtitle">{entry.data.subtitle}</p>}

        <div class="post-meta meta-row">
          {entry.data.date && (
            <time datetime={(entry.data.date as any).toISOString?.() ?? String(entry.data.date)}>
              {new Date(entry.data.date as any).toLocaleDateString(lang)}
            </time>
          )}
          {tags.length > 0 && (
            <div class="tags">
              {tags.map((tag) => <span class="tag">{tag}</span>)}
            </div>
          )}
        </div>
      </div>
    </div>

    <article class="post-body blog-typo">
      <Content />
    </article>
  </section>
</Layout>

<style>
:root{
  --text: #111827;
  --muted: #6b7280;
  --border: #e5e7eb;
  --hairline: color-mix(in srgb, #000 10%, transparent);
  --tag-bg: #f6f7f9;
}
@media (prefers-color-scheme: dark){
  :root{
    --text: #e5e7eb;
    --muted: #9aa0a6;
    --border: #1f2937;
    --hairline: color-mix(in srgb, #fff 12%, transparent);
    --tag-bg: #101418;
  }
}

/* 顶部区块布局：和 section 对齐居中 */
.post-header{
  max-width: 64rem; /* 与 max-w-5xl 保持一致 */
  margin: 0 auto;
  width: 100%;
}

.crumb-row{
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: .75rem;
  margin-bottom: .35rem;
}
@media (max-width: 640px){
  .crumb-row{
    flex-direction: column;
    align-items: flex-start;
    gap: .25rem;
  }
}

/* 关键：标题容器更宽 */
.hero-head{
  max-inline-size: 110ch;
  margin: 0 auto;
}
@media (min-width: 1280px){ .hero-head{ max-inline-size: 120ch; } }
@media (max-width: 900px) { .hero-head{ max-inline-size: 90ch; } }
@media (max-width: 640px) { .hero-head{ max-inline-size: 100%; } }

.post-title{
  margin: .35rem 0 .5rem;
  font-weight: 700;
  line-height: 1.14;
  letter-spacing: -0.01em;
  text-wrap: balance;
  color: var(--text);
}
.post-title-latin{
  font-size: clamp(1.2rem, 0.85rem + 0.95vw, 1.55rem);
  hyphens: auto;
  word-break: normal;
}
.post-title-cjk{
  font-size: clamp(1.18rem, .85rem + .9vw, 1.50rem);
  letter-spacing: 0;
  hyphens: none;
  word-break: keep-all;
  font-feature-settings: "palt";
}

.post-subtitle{
  margin: .15rem 0 .7rem;
  color: var(--muted);
  font-weight: 400;
  font-size: 1rem;
  letter-spacing: .004em;
}

.meta-row{
  display: flex;
  align-items: center;
  gap: .8rem;
  flex-wrap: wrap;
  color: var(--muted);
  font-size: .9rem;
  padding-bottom: .55rem;
  margin-bottom: 1.2rem;
  border-bottom: 1px solid var(--hairline);
}
.meta-row > * + *::before{
  content: "·";
  margin: 0 .3rem 0 0;
  color: var(--muted);
}
.tags{ display: inline-flex; gap: .35rem; flex-wrap: wrap; }

.tag{
  font-size: .8rem;
  font-weight: 500;
  color: var(--muted);
  background: var(--tag-bg);
  border: 1px solid var(--border);
  padding: .22rem .5rem;
  border-radius: .55rem;
  line-height: 1;
  letter-spacing: .01em;
  user-select: none;
}
.tag:hover{ filter: brightness(1.03); }

.backlink{
  font-size: .9rem;
  color: var(--muted);
  white-space: nowrap;
}
.backlink a{ text-decoration: none; color: inherit; }
.backlink a:hover{ text-decoration: underline; }

.blog-typo .viz iframe{
  aspect-ratio: 16 / 9;
  border-radius: .75rem;
}
</style>
