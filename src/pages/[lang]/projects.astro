---
/* =========================================
   项目列表：按路径语言过滤；若缺当前语言则回退到英文
   ========================================= */
/* @ts-nocheck */
import Layout from "../../layouts/Layout.astro";
import { dict, normalizeLang, languages } from "../../i18n";
import { getCollection, type CollectionEntry } from "astro:content";

export const prerender = true;

export function getStaticPaths() {
  return (languages as readonly string[]).map((code) => ({ params: { lang: code } }));
}

const lang = normalizeLang(Astro.params.lang as string);
const t = dict[lang];
const base = lang === "en" ? "/en" : `/${lang}`;

// 取全量后，从 entry.slug 推断语言（最后一段）
const all = await getCollection("projects");

// 明确 entry 类型，避免隐式 any
type Item = { entry: CollectionEntry<"projects">; entryLang: string; slug: string };

const parsed: Item[] = all.map((e: CollectionEntry<"projects">) => {
  const parts = e.slug.split("/");
  const entryLang = parts.at(-1) ?? "en";
  const slug = parts.slice(0, -1).join("/") || parts[0];
  return { entry: e, entryLang, slug };
});

// 语言优先级：当前语言 > 英文 > 其它；同分取日期新者
function score(l: string) { return l === lang ? 3 : l === "en" ? 2 : 1; }

const bySlug = new Map<string, Item>();
for (const item of parsed) {
  if (item.entry.data?.draft) continue;
  const old = bySlug.get(item.slug);
  if (!old) { bySlug.set(item.slug, item); continue; }

  const better =
    score(item.entryLang) > score(old.entryLang) ||
    (score(item.entryLang) === score(old.entryLang) &&
     +new Date(item.entry.data?.date ?? 0) > +new Date(old.entry.data?.date ?? 0));

  if (better) bySlug.set(item.slug, item);
}

const items = Array.from(bySlug.values())
  .sort((a, b) => +new Date(b.entry.data?.date ?? 0) - +new Date(a.entry.data?.date ?? 0));

// 小工具
const isFallback = (entryLang: string) => entryLang !== lang;
const linkHref = (slug: string, entryLang: string) =>
  entryLang === lang ? `${base}/projects/${slug}` : `/en/projects/${slug}`;
---

<Layout lang={lang} title={`Xiaosi Huang · ${t.projects.title}`}>
  <section class="mx-auto max-w-5xl px-4">
    <h1 class="text-4xl font-extrabold mb-3">{t.projects.title}</h1>
    <p class="opacity-70 mb-8">{t.projects.subtitle}</p>

    {items.length === 0 ? (
      <p class="opacity-60">No projects yet.</p>
    ) : (
      <ul class="grid gap-6 md:grid-cols-2">
        {items.map(({ entry: p, slug, entryLang }) => (
          <li>
            <a
              href={linkHref(slug, entryLang)}
              class="group block rounded-2xl border border-zinc-200 dark:border-zinc-800 p-6 hover:shadow-md transition"
            >
              <h2 class="text-2xl font-semibold group-hover:underline break-anywhere flex items-center gap-2">
                <span>{p.data.title}</span>
                {isFallback(entryLang) && (
                  <span class="text-[10px] px-1.5 py-0.5 rounded bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 border border-zinc-200 dark:border-zinc-700">
                    EN
                  </span>
                )}
              </h2>

              {p.data.excerpt && (
                <p class="mt-2 text-sm text-gray-600 dark:text-gray-400 break-anywhere">
                  {p.data.excerpt}
                </p>
              )}

              <div class="mt-3 grid grid-cols-[1fr_auto] items-end gap-3">
                <div class="flex flex-col gap-2">
                  {p.data.date && (
                    <time datetime={p.data.date.toISOString?.() ?? String(p.data.date)} class="text-xs text-gray-500">
                      {new Date(p.data.date).toLocaleDateString(lang)}
                    </time>
                  )}

                  {p.data.tags?.length > 0 && (
                    <div class="flex flex-wrap gap-2">
                      {(p.data.tags ?? []).map((tag: string) => (
                        <span class="text-xs bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded">#{tag}</span>
                      ))}

                    </div>
                  )}
                </div>

                {p.data.cover && (
                  <div class="ml-auto shrink-0 flex items-end">
                    <img
                      src={p.data.cover}
                      alt={p.data.coverAlt || p.data.title}
                      class="w-12 h-12 sm:w-14 sm:h-14 md:w-16 md:h-16 lg:w-20 lg:h-20 object-contain rounded-lg
                             bg-white dark:bg-zinc-900 ring-1 ring-zinc-200/70 dark:ring-zinc-800/80"
                      loading="lazy"
                      sizes="(max-width: 640px) 48px, (max-width: 768px) 56px, (max-width: 1024px) 64px, 80px"
                    />
                  </div>
                )}
              </div>
            </a>
          </li>
        ))}
      </ul>
    )}
  </section>
</Layout>
