---
import Layout from "../../layouts/Layout.astro";
import { dict, normalizeLang, languages } from "../../i18n";
import { projects } from "../../data/projects";

export const prerender = true;
export function getStaticPaths() {
  return languages.map((lang) => ({ params: { lang } }));
}

const lang = normalizeLang(Astro.params.lang as string);
const t = dict[lang];

// 简单的回落：title[lang] || title.en
const $t = (obj) => obj?.[lang] ?? obj?.en;
---

<Layout lang={lang} title={`Xiaosi Huang · ${t.projects.title}`}>
  <section class="mx-auto max-w-7xl px-4 md:px-8 py-12">
    <h1 class="text-3xl md:text-4xl font-bold mb-2">{t.projects.title}</h1>
    <p class="opacity-70 mb-8">{t.projects.subtitle}</p>

    <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-5">
      {projects.map(p => (
        <article class="rounded-2xl border border-zinc-200/80 dark:border-zinc-800 overflow-hidden">
          {p.cover && <img src={p.cover} alt={$t(p.title)} class="w-full h-40 object-cover" loading="lazy" decoding="async" />}
          <div class="p-4">
            <h3 class="font-semibold text-lg mb-1">{$t(p.title)}</h3>
            {p.subtitle && <p class="opacity-70 text-sm mb-3">{$t(p.subtitle)}</p>}
            {p.tags?.length && (
              <div class="flex flex-wrap gap-2 text-xs opacity-70 mb-3">
                {p.tags.map(tag => <span class="px-2 py-1 rounded-full border border-zinc-200 dark:border-zinc-700">{tag}</span>)}
              </div>
            )}
            {p.links?.length && (
              <div class="flex gap-2">
                {p.links.map(l => (
                  <a href={l.href} target="_blank" rel="noopener" class="text-blue-600 hover:underline">{l.label}</a>
                ))}
              </div>
            )}
          </div>
        </article>
      ))}
    </div>
  </section>
</Layout>
