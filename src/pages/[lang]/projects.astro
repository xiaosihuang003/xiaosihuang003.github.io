---
// /src/pages/[lang]/projects.astro
/* @ts-nocheck */
import Layout from "../../layouts/Layout.astro";
import { dict, normalizeLang, languages } from "../../i18n";
import { getCollection, type CollectionEntry } from "astro:content";

export const prerender = true;

/** 生成多语言路径 */
export function getStaticPaths() {
  return (languages as readonly string[]).map((code) => ({ params: { lang: code } }));
}

const lang = normalizeLang(Astro.params.lang as string);
const t = dict[lang];
const base = lang === "en" ? "/en" : `/${lang}`;

/** 取 projects 集合，使用 slug 最后一段作为语言标记（与你的 Blog/Docs 一致） */
const all = await getCollection("projects");

type Item = { entry: CollectionEntry<"projects">; entryLang: string; slug: string };

const parsed: Item[] = all.map((e: CollectionEntry<"projects">) => {
  const parts = e.slug.split("/");
  const entryLang = parts.at(-1) ?? "en";
  const slug = parts.slice(0, -1).join("/") || parts[0];
  return { entry: e, entryLang, slug };
});

/** 语言优先级：当前语言 > 英文 > 其它；同分取日期新者 */
function score(l: string) { return l === lang ? 3 : l === "en" ? 2 : 1; }

const bySlug = new Map<string, Item>();
for (const item of parsed) {
  // 过滤草稿
  if (item.entry.data?.draft) continue;

  const old = bySlug.get(item.slug);
  if (!old) { bySlug.set(item.slug, item); continue; }

  const better =
    score(item.entryLang) > score(old.entryLang) ||
    (score(item.entryLang) === score(old.entryLang) &&
     +new Date(item.entry.data?.date ?? 0) > +new Date(old.entry.data?.date ?? 0));

  if (better) bySlug.set(item.slug, item);
}

/** 按日期倒序 */
const items = Array.from(bySlug.values())
  .sort((a, b) => +new Date(b.entry.data?.date ?? 0) - +new Date(a.entry.data?.date ?? 0));

/** 链接处理：如果项目不是当前语言版本，回退到英文路径 */
const linkHref = (slug: string, entryLang: string) =>
  entryLang === lang ? `${base}/projects/${slug}` : `/en/projects/${slug}`;

/** 是否语言回退（用于右上角 EN 角标） */
const isFallback = (entryLang: string) => entryLang !== lang;
---

<Layout lang={lang} title={`Xiaosi Huang · ${t.projects.title}`}>
  <section class="mx-auto max-w-5xl px-4">
    <h1 class="text-4xl font-extrabold mb-3">{t.projects.title}</h1>
    <p class="opacity-70 mb-8">{t.projects.subtitle}</p>

    {items.length === 0 ? (
      <p class="opacity-60">No projects yet.</p>
    ) : (
      // ✅ 使用与 Blog/Docs 相同的卡片结构/类名，保证统一样式
      <ul class="grid gap-6 md:grid-cols-2">
        {items.map(({ entry: p, slug, entryLang }) => (
          <li>
            <a
              href={linkHref(slug, entryLang)}
              class="blog-card group block rounded-2xl border border-zinc-200 dark:border-zinc-800 p-6 hover:shadow-md transition"
            >
              <div class="flex items-start gap-4">
                {/* 左侧文字 */}
                <div class="min-w-0 flex-1">
                  {p.data.date && (
                    <time
                      datetime={p.data.date.toISOString?.() ?? String(p.data.date)}
                      class="blog-date"
                    >
                      {new Date(p.data.date).toLocaleDateString(lang)}
                    </time>
                  )}

                  <h2 class="blog-title clamp-2 break-anywhere mt-1 flex items-center gap-2">
                    <span>{p.data.title}</span>
                    {isFallback(entryLang) && (
                      <span
                        class="ml-1 text-[10px] px-1.5 py-0.5 rounded bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 border border-zinc-200 dark:border-zinc-700"
                        title="Showing English version"
                      >
                        EN
                      </span>
                    )}
                  </h2>

                  {p.data.excerpt && (
                    <p class="blog-excerpt clamp-2 mt-2 break-anywhere">{p.data.excerpt}</p>
                  )}

                  {p.data.tags?.length > 0 && (
                    <div class="mt-3 flex flex-wrap gap-2">
                      {(p.data.tags ?? []).map((tag: string) => (
                        <span class="blog-tag">#{tag}</span>
                      ))}
                    </div>
                  )}
                </div>

                {/* 右侧封面缩略图（可选） */}
                {p.data.cover && (
                  <img
                    src={p.data.cover}
                    alt={p.data.coverAlt || p.data.title}
                    class="hidden sm:block w-20 h-20 object-cover rounded-lg bg-white dark:bg-zinc-900 ring-1 ring-zinc-200/70 dark:ring-zinc-800/80 shrink-0"
                    loading="lazy"
                    sizes="80px"
                  />
                )}
              </div>
            </a>
          </li>
        ))}
      </ul>
    )}
  </section>
</Layout>

<style>
.blog-card{ transition: box-shadow .2s ease, transform .2s ease; }
.blog-card:hover{ transform: translateY(-1px); box-shadow: 0 6px 24px rgba(0,0,0,.08); }
.blog-title{ font-size:1.35rem; line-height:1.28; letter-spacing:-.01em; font-weight:600; }
.blog-excerpt{ font-size:1rem; color: var(--muted); }
.blog-date{ font-size:.8rem; color:#6b7280; }
.blog-tag{ font-size:.75rem; background:var(--tag-bg); color:var(--muted); padding:.3rem .55rem; border-radius:.55rem; border:1px solid var(--border); }
.clamp-2{ display:-webkit-box; -webkit-line-clamp:2; -webkit-box-orient:vertical; overflow:hidden; }
.break-anywhere{ overflow-wrap:anywhere; word-break:break-word; }
</style>
