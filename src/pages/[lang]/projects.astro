---
// /src/pages/[lang]/projects.astro
/* @ts-nocheck */
import Layout from "../../layouts/Layout.astro";
import { dict, normalizeLang, languages } from "../../i18n";
import { getCollection, type CollectionEntry } from "astro:content";

export const prerender = true;

/** 生成多语言路径 */
export function getStaticPaths() {
  return (languages as readonly string[]).map((code) => ({ params: { lang: code } }));
}

const lang = normalizeLang(Astro.params.lang as string);
const t = dict[lang];
const base = lang === "en" ? "/en" : `/${lang}`;

/** 取 projects 集合，使用 slug 最后一段作为语言标记 */
const all = await getCollection("projects");

type Item = { entry: CollectionEntry<"projects">; entryLang: string; slug: string };

const parsed: Item[] = all.map((e: CollectionEntry<"projects">) => {
  const parts = e.slug.split("/");
  const entryLang = parts.at(-1) ?? "en";
  const slug = parts.slice(0, -1).join("/") || parts[0];
  return { entry: e, entryLang, slug };
});

/** 语言优先级：当前语言 > 英文 > 其它；同分取日期新者 */
function score(l: string) { return l === lang ? 3 : l === "en" ? 2 : 1; }

const bySlug = new Map<string, Item>();
for (const item of parsed) {
  if (item.entry.data?.draft) continue; // 过滤草稿
  const old = bySlug.get(item.slug);
  if (!old) { bySlug.set(item.slug, item); continue; }
  const better =
    score(item.entryLang) > score(old.entryLang) ||
    (score(item.entryLang) === score(old.entryLang) &&
     +new Date(item.entry.data?.date ?? 0) > +new Date(old.entry.data?.date ?? 0));
  if (better) bySlug.set(item.slug, item);
}

/** 按日期倒序 */
const items = Array.from(bySlug.values())
  .sort((a, b) => +new Date(b.entry.data?.date ?? 0) - +new Date(a.entry.data?.date ?? 0));

/** 计算自动编号：最新编号最大 */
const total = items.length;
const withSeq = items.map((it, index) => ({
  ...it,
  seq: total - index,
}));

/** 链接：非当前语言回退到英文 */
const linkHref = (slug: string, entryLang: string) =>
  entryLang === lang ? `${base}/projects/${slug}` : `/en/projects/${slug}`;

/** 是否语言回退（用于 EN 角标） */
const isFallback = (entryLang: string) => entryLang !== lang;
---

<Layout lang={lang} title={`Xiaosi Huang · ${t.projects.title}`}>
  <section class="mx-auto max-w-5xl px-4">
    <h1 class="text-4xl font-extrabold mb-3">{t.projects.title}</h1>
    <p class="opacity-70 mb-8">{t.projects.subtitle}</p>

    {withSeq.length === 0 ? (
      <p class="opacity-60">No projects yet.</p>
    ) : (
      <ul class="projects-grid">
        {withSeq.map(({ entry: p, slug, entryLang, seq }) => (
          <li class="card-li">
            <a href={linkHref(slug, entryLang)} class="blog-card group">
              <div class="card-main">
                {/* 左侧文字区 */}
                <div class="card-text">
                  {p.data.date && (
                    <time
                      datetime={p.data.date.toISOString?.() ?? String(p.data.date)}
                      class="blog-date"
                    >
                      {new Date(p.data.date).toLocaleDateString(lang)}
                    </time>
                  )}

                  <h2 class="blog-title clamp-2 break-anywhere mt-1">
                    <span class="seq">#{seq}</span>
                    <span class="title-text">{p.data.title}</span>
                    {isFallback(entryLang) && <span class="lang-pill" title="Showing English version">EN</span>}
                  </h2>

                  {p.data.excerpt && (
                    <p class="blog-excerpt clamp-2 mt-2 break-anywhere">{p.data.excerpt}</p>
                  )}

                  {p.data.tags?.length > 0 && (
                    <div class="card-tags">
                      {(p.data.tags ?? []).map((tag: string) => (
                        <span class="blog-tag">#{tag}</span>
                      ))}
                    </div>
                  )}
                </div>

                {/* 右侧缩略图（可选，固定尺寸） */}
                {p.data.cover && (
                  <img
                    src={p.data.cover}
                    alt={p.data.coverAlt || p.data.title}
                    class="thumb"
                    loading="lazy"
                    sizes="80px"
                  />
                )}
              </div>
            </a>
          </li>
        ))}
      </ul>
    )}
  </section>
</Layout>

<style>
/* 栅格：等高 */
.projects-grid{
  display:grid;
  gap:1.5rem;
  grid-template-columns: 1fr;
}
@media (min-width:768px){
  .projects-grid{ grid-template-columns: 1fr 1fr; }
}
.card-li{ display:flex; } /* 让卡片可拉伸为等高 */

/* 卡片：纵向弹性，内部主区横排 */
.blog-card{
  display:flex; flex-direction:column; height:100%;
  border-radius:1rem; border:1px solid var(--border);
  padding:1.5rem; background:var(--card, transparent);
  transition: box-shadow .2s ease, transform .2s ease;
}
.blog-card:hover{ transform:translateY(-1px); box-shadow:0 6px 24px rgba(0,0,0,.08); }

/* 主内容区：文字 + 缩略图 */
.card-main{ display:flex; align-items:flex-start; gap:1rem; flex:1; min-height:0; }

/* 左侧文字：列方向，标签压底 */
.card-text{ display:flex; flex-direction:column; gap:.125rem; min-width:0; flex:1; }

/* 缩略图统一尺寸，避免高度差 */
.thumb{ display:none; }
@media (min-width:640px){
  .thumb{
    display:block; width:80px; height:80px; object-fit:cover;
    border-radius:.75rem; background:#fff;
    box-shadow:0 0 0 1px var(--border) inset; flex-shrink:0;
  }
}

/* 标题与序号 */
.blog-title{
  font-size:1.25rem; line-height:1.28; letter-spacing:-.01em;
  font-weight:700; display:flex; align-items:center; gap:.5rem;
}
.seq{
  display:inline-block; width:2.6ch; text-align:right;
  font-variant-numeric:tabular-nums; font-weight:700; color:#6b7280; flex-shrink:0;
}
.title-text{ min-width:0; } /* 允许标题自身换行 */
.lang-pill{
  margin-left:.25rem; font-size:10px; padding:.125rem .375rem;
  border-radius:.5rem; background:#f3f4f6; color:#4b5563; border:1px solid var(--border);
  flex-shrink:0;
}

/* 元信息/摘要/标签 */
.blog-date{ font-size:.8rem; color:#6b7280; }
.blog-excerpt{ font-size:1rem; color:var(--muted); }

.card-tags{
  margin-top:auto;        /* 关键：标签固定在卡片底部 */
  display:flex; flex-wrap:wrap; gap:.5rem; padding-top:.5rem;
}
.blog-tag{
  font-size:.75rem; background:var(--tag-bg); color:var(--muted);
  padding:.3rem .55rem; border-radius:.55rem; border:1px solid var(--border);
}

/* 工具类 */
.clamp-2{ display:-webkit-box; -webkit-line-clamp:2; -webkit-box-orient:vertical; overflow:hidden; }
.break-anywhere{ overflow-wrap:anywhere; word-break:break-word; }
</style>
