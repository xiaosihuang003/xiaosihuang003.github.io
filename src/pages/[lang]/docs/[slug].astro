---
import Layout from "../../../layouts/Layout.astro";
import Breadcrumbs from "../../../components/Breadcrumbs.astro";
import { dict, normalizeLang, languages } from "../../../i18n";
import { getCollection, type CollectionEntry } from "astro:content";

export const prerender = true;

/** 由 docs 集合生成 { lang, slug } 静态路径 */
export async function getStaticPaths() {
  const all = await getCollection("docs");
  return all.map((entry: CollectionEntry<"docs">) => {
    const parts = entry.slug.split("/");
    const lang = (parts.at(-1) ?? "en") as string;
    const slug = parts.slice(0, -1).join("/") || parts[0];
    return { params: { lang, slug }, props: { entry, lang, slug } };
  });
}

type PageParams = { lang: string; slug: string };
const { lang: rawLang, slug } = Astro.params as PageParams;

const paramsLang = normalizeLang(rawLang ?? "en");
const t = dict[paramsLang];
const base = paramsLang === "en" ? "/en" : `/${paramsLang}`;

const { entry } = Astro.props as { entry: CollectionEntry<"docs"> };
const alternates = Object.fromEntries(
  languages.map((code) => [code, `${code === "en" ? "/en" : "/" + code}/docs/${slug}`]),
);

const tags = (entry?.data?.tags ?? []) as string[];
const { Content } = await entry.render();
---

<Layout lang={paramsLang} title={`${entry.data.title} · Xiaosi Huang`} alternates={alternates}>
  <section class="mx-auto max-w-3xl px-4 md:px-6 py-10">
    <div class="post-header">
      <Breadcrumbs
        items={[
          { href: base, label: t.nav.home },
          { href: `${base}/docs`, label: t.nav.docs },
          //{ label: entry.data.title },
        ]}
      />
      <p class="backlink"><a href={`${base}/docs`}>← {t.ui.backToDocs}</a></p>

      {entry.data.kicker && <div class="post-kicker">{entry.data.kicker}</div>}
      <h1 class="post-title">{entry.data.title}</h1>
      {entry.data.subtitle && <p class="post-subtitle">{entry.data.subtitle}</p>}

      <div class="post-meta">
        {entry.data.date && (
          <time datetime={entry.data.date.toISOString?.() ?? String(entry.data.date)}>
            {new Date(entry.data.date).toLocaleDateString(paramsLang)}
          </time>
        )}
        {tags.length > 0 && (
          <div class="flex flex-wrap gap-2">
            {tags.map((tag) => (
              <a class="tag" href={`${base}/docs?tag=${encodeURIComponent(String(tag))}`}>
                #{tag}
              </a>
            ))}
          </div>
        )}
      </div>
    </div>

    <article class="post-body blog-typo">
      <Content />
    </article>
  </section>
</Layout>

<style>
/* 复用博客详情页的排版样式，保证风格一致 */
.blog-typo{
  --fs-body: 1rem;
  --fs-h2: 1.12rem;
  --fs-h3: 1.02rem;
}
.blog-typo p{ font-size: var(--fs-body); line-height: 1.85; margin: 1rem 0; }
.blog-typo ul, .blog-typo ol{ margin: .9rem 0 .9rem 1.2rem; }
.blog-typo li{ margin: .35rem 0; }
.blog-typo h2{ font-size: var(--fs-h2); font-weight: 600; line-height: 1.35; margin: 1.4rem 0 .8rem; }
.blog-typo h3{ font-size: var(--fs-h3); font-weight: 600; line-height: 1.4;  margin: 1rem 0 .6rem; }
.blog-typo strong{ font-weight: 600; }
.blog-typo blockquote{
  margin: 1.1rem 0;
  padding: .75rem 1rem;
  background: var(--card);
  border-left: 3px solid var(--border);
  border-radius: .5rem;
  color: var(--muted);
}
.blog-typo blockquote p{ margin: .4rem 0; }
.blog-typo hr{ border:0; border-top:1px solid var(--border); margin: 1.2rem 0; opacity:.6; }
.blog-typo figure{ margin: 1.2rem 0 1.4rem; }
.blog-typo figure figcaption{ color: var(--muted); font-size: .92rem; margin-top: .5rem; }
.blog-typo .viz iframe{ aspect-ratio: 16/9; border-radius: .75rem; }

/* 详情页标签样式 */
.tag{ font-size:.75rem; background:var(--tag-bg); color:var(--muted); padding:.3rem .55rem; border-radius:.55rem; border:1px solid var(--border); text-decoration:none; }
</style>
