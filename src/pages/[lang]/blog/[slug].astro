---
import Layout from "../../../layouts/Layout.astro";
import BackButton from "../../../components/BackButton.astro";
import { dict, normalizeLang, languages } from "../../../i18n";
import { getCollection } from "astro:content";

export const prerender = true;

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((p) => ({ params: { lang: p.data.lang, slug: p.slug } }));
}

const lang = normalizeLang(Astro.params.lang as string);
const t = dict[lang];

const slug = Astro.params.slug as string;
const all = await getCollection("blog");
const post = all.find((p) => p.slug === slug && p.data.lang === lang);
if (!post) throw new Error(`Post not found: ${lang}/${slug}`);

// 其他语言 alternate
const alternates = Object.fromEntries(
  (languages as readonly string[]).map((code) => {
    const target = all.find((p) => p.data.lang === code && p.slug.replace(/[-_](en|fi|no|sv|zh|yue)$/,'').length > 0 && p.slug.startsWith(slug.replace(/[-_](en|fi|no|sv|zh|yue)$/,'')));
    const prefix = code === "en" ? "/en" : `/${code}`;
    return [code, target ? `${prefix}/blog/${target.slug}` : `${prefix}/blog`];
  })
);

// 内容
const { Content } = await post.render();
const base = lang === "en" ? "/en" : `/${lang}`;
---

<Layout lang={lang} title={`${post.data.title} · Xiaosi Huang`} alternates={alternates}>
  <article class="mx-auto max-w-3xl px-4 md:px-6 lg:px-0 py-10 md:py-12">
    <!-- 顶部：面包屑 + 返回按钮（绝对定位） -->
    <header class="relative pb-1">
      <nav class="mb-6 text-sm text-zinc-500">
        <a href={base} class="hover:underline">{t.ui.breadcrumbs.home}</a>
        <span class="mx-2">/</span>
        <a href={`${base}/blog`} class="hover:underline">{t.ui.breadcrumbs.blog}</a>
      </nav>

      <BackButton
        href={`${base}/blog`}
        lang={lang}
        kind="blog"
        class="absolute right-0 -top-10 md:top-0"
      />

      <h1 class="text-3xl md:text-[34px] font-extrabold leading-tight text-balance">
        {post.data.title}
      </h1>

      {post.data.subtitle && (
        <p class="mt-2 text-[15px] md:text-base text-zinc-600 dark:text-zinc-400">
          {post.data.subtitle}
        </p>
      )}

      <div class="mt-3 flex flex-wrap items-center gap-2 text-sm text-zinc-500">
        <time datetime={post.data.date.toISOString()}>
          {post.data.date.toLocaleDateString(lang)}
        </time>
        {post.data.tags?.length > 0 && (
          <div class="flex flex-wrap gap-2">
            {post.data.tags.map((tag) => (
              <span class="rounded-full border border-zinc-200 dark:border-zinc-800 bg-zinc-50 dark:bg-zinc-900/40 px-2 py-0.5 text-xs">#{tag}</span>
            ))}
          </div>
        )}
      </div>
    </header>

    <div class="post-body mt-6">
      <Content />
    </div>
  </article>
</Layout>
