---
import Layout from "../../../layouts/Layout.astro";
import { getCollection } from "astro:content";
import { dict, normalizeLang, languages } from "../../../i18n";

export const prerender = true;

export function getStaticPaths() {
  return languages.map((lang) => ({ params: { lang } }));
}

const lang = normalizeLang(Astro.params.lang as string);
const t = dict[lang];
const base = lang === "en" ? "/en" : `/${lang}`;

const posts = (await getCollection("blog", ({ data }) =>
  data.lang === lang && data.draft !== true
)).sort((a, b) => +b.data.date - +a.data.date);
---

<Layout lang={lang} title={`Xiaosi Huang Â· ${t.blog.title}`}>
  <section class="mx-auto max-w-5xl px-4">
    <h1 class="text-4xl font-extrabold mb-3">{t.blog.title}</h1>
    <p class="opacity-70 mb-8">{t.blog.subtitle}</p>

    {posts.length === 0 ? (
      <p class="opacity-60">{t.blog.empty || "No posts yet."}</p>
    ) : (
      <ul class="space-y-6">
        {posts.map((p) => (
          <li
            class="rounded-2xl border border-zinc-200 dark:border-zinc-800 p-6 hover:shadow-md transition group"
          >
            <a href={`${base}/blog/${p.slug}`} class="group block">
              {p.data.cover && (
                <img
                  src={p.data.cover}
                  alt={p.data.coverAlt || p.data.title}
                  class="w-full h-48 object-cover rounded-lg mb-4"
                  loading="lazy"
                />
              )}
              <h2 class="text-2xl font-semibold group-hover:underline">
                {p.data.title}
              </h2>
              {p.data.excerpt && (
                <p class="mt-2 text-sm text-gray-600 dark:text-gray-400">
                  {p.data.excerpt}
                </p>
              )}
              <div class="flex justify-between items-start gap-4 mt-3">
                <time
                  datetime={p.data.date.toISOString()}
                  class="text-xs text-gray-500"
                >
                  {p.data.date.toLocaleDateString(lang)}
                </time>
                {p.data.tags && p.data.tags.length > 0 && (
                  <div class="flex flex-wrap gap-2">
                    {p.data.tags.map((tag) => (
                      <span class="text-xs bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded">
                        {tag}
                      </span>
                    ))}
                  </div>
                )}
              </div>
            </a>
          </li>
        ))}
      </ul>
    )}
  </section>
</Layout>
