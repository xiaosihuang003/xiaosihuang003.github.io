---
import Layout from "../../../layouts/Layout.astro";
import { getCollection } from "astro:content";
import { dict, normalizeLang } from "../../../i18n";

export const prerender = true;

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((p) => ({
    params: { lang: p.data.lang, slug: p.slug },
  }));
}

const lang = normalizeLang(Astro.params.lang as string);
const t = dict[lang];

const slug = Astro.params.slug as string;
const all = await getCollection("blog");
const post = all.find((p) => p.slug === slug && p.data.lang === lang);

if (!post) {
  throw new Error(`Post not found: ${lang}/${slug}`);
}

const { Content } = await post.render();

// —— 标题自动拆分：kicker（冒号前）+ 主标题（冒号后）
const rawTitle = post.data.title ?? "";
const parts = rawTitle.split(/[:：]/);            // 支持半/全角冒号
const kicker = parts.length > 1 ? parts[0].trim() : "";
const mainTitle = parts.length > 1
  ? rawTitle.slice(rawTitle.indexOf(parts[0]) + parts[0].length + 1).trim()
  : rawTitle.trim();
---
<Layout lang={lang} title={`${post.data.title} · Xiaosi Huang`}>
  <article class="post px-4 py-12">
    <header class="mb-2">
      {kicker && <div class="post-kicker">{kicker}</div>}

      <!-- 主标题：只放冒号后的部分 -->
      <h1 class="post-title break-anywhere">{mainTitle}</h1>


      {post.data.subtitle && <p class="post-subtitle">{post.data.subtitle}</p>}

      <div class="post-meta">
        <time datetime={post.data.date.toISOString()}>
          {post.data.date.toLocaleDateString(lang)}
        </time>

        {post.data.tags?.length > 0 && (
          <div class="flex flex-wrap gap-2">
            {post.data.tags.map((tag) => (
              <span class="tag">#{tag}</span>
            ))}
          </div>
        )}
      </div>

      {post.data.cover && (
        <figure class="post-cover">
          <img
            src={post.data.cover}
            alt={post.data.coverAlt || post.data.title}
            loading="eager"
          />
          {(post.data.coverCredit || post.data.coverCreditUrl) && (
            <figcaption>
              图片来源：
              {post.data.coverCreditUrl ? (
                <a
                  href={post.data.coverCreditUrl}
                  target="_blank"
                  rel="noopener noreferrer nofollow"
                >
                  {post.data.coverCredit || post.data.coverCreditUrl}
                </a>
              ) : (
                post.data.coverCredit
              )}
            </figcaption>
          )}
        </figure>
      )}
      
    </header>

    <div class="post-body">
      <Content />
    </div>
  </article>
</Layout>
